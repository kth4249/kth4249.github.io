{"version":3,"sources":["Counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CounterKai","counter","useRef","console","log","useEffect","timer","setInterval","current","clearInterval","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAwCe,SAASA,IACtB,IAAMC,EAAUC,iBAAO,GAWvB,OAVAC,QAAQC,IAAI,aACZC,qBAAU,WACR,IAAMC,EAAQC,aAAY,WACxBN,EAAQO,SAAW,IAClB,KACH,OAAO,WACLC,cAAcH,GACdH,QAAQC,IAAI,iBAAkBH,EAAQO,YAEvC,IAED,qBAAKE,QAAS,kBAAMP,QAAQC,IAAIH,EAAQO,UAAxC,SACE,4BAAIP,EAAQO,YCzBHG,MAxBf,WAmBE,OACE,cAAC,EAAD,KCXWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f007bbd0.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\n// export default function Counter() {\r\n//   const [counter, setCounter] = useState(0);\r\n//   console.log('rendering');\r\n//   useEffect(() => {\r\n//     const timer = setInterval(() => {\r\n//       setCounter(counter => counter + 1);\r\n//     }, 1000);\r\n//     return () => {\r\n//       clearInterval(timer);\r\n//       alert(counter);\r\n//     };\r\n//   }, []);\r\n//   return (\r\n//     <div onClick={() => console.log(counter)}>\r\n//       <p>{counter}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default function CounterKai() {\r\n//   const counter = useRef(0);\r\n//   console.log('rendering');\r\n//   useEffect(() => {\r\n//     const timer = setInterval(() => {\r\n//       counter.current += 1;\r\n//     }, 1000);\r\n//     return () => {\r\n//       clearInterval(timer);\r\n//       console.log(\"<CounterKai/>:\", counter.current);\r\n//     };\r\n//   }, []);\r\n//   return (\r\n//     <div onClick={() => console.log(counter.current)}>\r\n//       <p>{counter.current}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default function CounterKai() {\r\n  const counter = useRef(0);\r\n  console.log('rendering');\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      counter.current += 1;\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(timer);\r\n      console.log(\"<CounterKai/>:\", counter.current);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div onClick={() => console.log(counter.current)}>\r\n      <p>{counter.current}</p>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Counter from './Counter';\r\n\r\nfunction App() {\r\n  // return (\r\n  //   <div className=\"App\">\r\n  //     <header className=\"App-header\">\r\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n  //       <p>\r\n  //         Edit <code>src/App.tsx</code> and save to reload.\r\n  //       </p>\r\n  //       <a\r\n  //         className=\"App-link\"\r\n  //         href=\"https://reactjs.org\"\r\n  //         target=\"_blank\"\r\n  //         rel=\"noopener noreferrer\"\r\n  //       >\r\n  //         Learn React\r\n  //       </a>\r\n  //     </header>\r\n  //   </div>\r\n  // );\r\n  return (\r\n    <Counter />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}